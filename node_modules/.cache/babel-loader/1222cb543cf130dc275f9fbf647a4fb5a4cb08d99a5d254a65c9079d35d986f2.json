{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\react\\\\project1\\\\src\\\\components\\\\ScrampledText.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrambledText = ({\n  children,\n  className = '',\n  radius = 100,\n  duration = 1.2,\n  speed = 0.5,\n  scrambleChars = '.:,'\n}) => {\n  _s();\n  const elementRef = useRef(null);\n  const originalTextRef = useRef(children);\n  const animationRef = useRef(null);\n  useEffect(() => {\n    const element = elementRef.current;\n    if (!element) return;\n    const originalText = originalTextRef.current;\n    const chars = scrambleChars.split('');\n    let progress = 0;\n    let startTime = null;\n    const animate = currentTime => {\n      if (!startTime) startTime = currentTime;\n      const elapsed = currentTime - startTime;\n      progress = Math.min(elapsed / (duration * 1000), 1);\n      let displayText = '';\n      for (let i = 0; i < originalText.length; i++) {\n        const char = originalText[i];\n        const charProgress = Math.max(0, progress - i * speed / originalText.length);\n        if (charProgress >= 1) {\n          displayText += char;\n        } else if (charProgress > 0) {\n          const randomChar = chars[Math.floor(Math.random() * chars.length)];\n          displayText += randomChar;\n        } else {\n          displayText += ' ';\n        }\n      }\n      element.textContent = displayText;\n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(animate);\n      }\n    };\n    animationRef.current = requestAnimationFrame(animate);\n    return () => {\n      if (animationRef.current) {\n        cancelAnimationFrame(animationRef.current);\n      }\n    };\n  }, [duration, speed, scrambleChars]);\n  return /*#__PURE__*/_jsxDEV(\"span\", {\n    ref: elementRef,\n    className: className,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrambledText, \"PcSJG3NqCfMvH42i3faQKLKv7PA=\");\n_c = ScrambledText;\nexport default ScrambledText;\nvar _c;\n$RefreshReg$(_c, \"ScrambledText\");","map":{"version":3,"names":["React","useEffect","useRef","jsxDEV","_jsxDEV","ScrambledText","children","className","radius","duration","speed","scrambleChars","_s","elementRef","originalTextRef","animationRef","element","current","originalText","chars","split","progress","startTime","animate","currentTime","elapsed","Math","min","displayText","i","length","char","charProgress","max","randomChar","floor","random","textContent","requestAnimationFrame","cancelAnimationFrame","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/react/project1/src/components/ScrampledText.jsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\n\r\nconst ScrambledText = ({ \r\n  children, \r\n  className = '', \r\n  radius = 100, \r\n  duration = 1.2, \r\n  speed = 0.5, \r\n  scrambleChars = '.:,' \r\n}) => {\r\n  const elementRef = useRef(null);\r\n  const originalTextRef = useRef(children);\r\n  const animationRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const element = elementRef.current;\r\n    if (!element) return;\r\n\r\n    const originalText = originalTextRef.current;\r\n    const chars = scrambleChars.split('');\r\n    let progress = 0;\r\n    let startTime = null;\r\n\r\n    const animate = (currentTime) => {\r\n      if (!startTime) startTime = currentTime;\r\n      const elapsed = currentTime - startTime;\r\n      progress = Math.min(elapsed / (duration * 1000), 1);\r\n\r\n      let displayText = '';\r\n      \r\n      for (let i = 0; i < originalText.length; i++) {\r\n        const char = originalText[i];\r\n        const charProgress = Math.max(0, progress - (i * speed) / originalText.length);\r\n\r\n        if (charProgress >= 1) {\r\n          displayText += char;\r\n        } else if (charProgress > 0) {\r\n          const randomChar = chars[Math.floor(Math.random() * chars.length)];\r\n          displayText += randomChar;\r\n        } else {\r\n          displayText += ' ';\r\n        }\r\n      }\r\n\r\n      element.textContent = displayText;\r\n\r\n      if (progress < 1) {\r\n        animationRef.current = requestAnimationFrame(animate);\r\n      }\r\n    };\r\n\r\n    animationRef.current = requestAnimationFrame(animate);\r\n\r\n    return () => {\r\n      if (animationRef.current) {\r\n        cancelAnimationFrame(animationRef.current);\r\n      }\r\n    };\r\n  }, [duration, speed, scrambleChars]);\r\n\r\n  return (\r\n    <span ref={elementRef} className={className}>\r\n      {children}\r\n    </span>\r\n  );\r\n};\r\n\r\nexport default ScrambledText;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,aAAa,GAAGA,CAAC;EACrBC,QAAQ;EACRC,SAAS,GAAG,EAAE;EACdC,MAAM,GAAG,GAAG;EACZC,QAAQ,GAAG,GAAG;EACdC,KAAK,GAAG,GAAG;EACXC,aAAa,GAAG;AAClB,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAMC,UAAU,GAAGX,MAAM,CAAC,IAAI,CAAC;EAC/B,MAAMY,eAAe,GAAGZ,MAAM,CAACI,QAAQ,CAAC;EACxC,MAAMS,YAAY,GAAGb,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMe,OAAO,GAAGH,UAAU,CAACI,OAAO;IAClC,IAAI,CAACD,OAAO,EAAE;IAEd,MAAME,YAAY,GAAGJ,eAAe,CAACG,OAAO;IAC5C,MAAME,KAAK,GAAGR,aAAa,CAACS,KAAK,CAAC,EAAE,CAAC;IACrC,IAAIC,QAAQ,GAAG,CAAC;IAChB,IAAIC,SAAS,GAAG,IAAI;IAEpB,MAAMC,OAAO,GAAIC,WAAW,IAAK;MAC/B,IAAI,CAACF,SAAS,EAAEA,SAAS,GAAGE,WAAW;MACvC,MAAMC,OAAO,GAAGD,WAAW,GAAGF,SAAS;MACvCD,QAAQ,GAAGK,IAAI,CAACC,GAAG,CAACF,OAAO,IAAIhB,QAAQ,GAAG,IAAI,CAAC,EAAE,CAAC,CAAC;MAEnD,IAAImB,WAAW,GAAG,EAAE;MAEpB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGX,YAAY,CAACY,MAAM,EAAED,CAAC,EAAE,EAAE;QAC5C,MAAME,IAAI,GAAGb,YAAY,CAACW,CAAC,CAAC;QAC5B,MAAMG,YAAY,GAAGN,IAAI,CAACO,GAAG,CAAC,CAAC,EAAEZ,QAAQ,GAAIQ,CAAC,GAAGnB,KAAK,GAAIQ,YAAY,CAACY,MAAM,CAAC;QAE9E,IAAIE,YAAY,IAAI,CAAC,EAAE;UACrBJ,WAAW,IAAIG,IAAI;QACrB,CAAC,MAAM,IAAIC,YAAY,GAAG,CAAC,EAAE;UAC3B,MAAME,UAAU,GAAGf,KAAK,CAACO,IAAI,CAACS,KAAK,CAACT,IAAI,CAACU,MAAM,CAAC,CAAC,GAAGjB,KAAK,CAACW,MAAM,CAAC,CAAC;UAClEF,WAAW,IAAIM,UAAU;QAC3B,CAAC,MAAM;UACLN,WAAW,IAAI,GAAG;QACpB;MACF;MAEAZ,OAAO,CAACqB,WAAW,GAAGT,WAAW;MAEjC,IAAIP,QAAQ,GAAG,CAAC,EAAE;QAChBN,YAAY,CAACE,OAAO,GAAGqB,qBAAqB,CAACf,OAAO,CAAC;MACvD;IACF,CAAC;IAEDR,YAAY,CAACE,OAAO,GAAGqB,qBAAqB,CAACf,OAAO,CAAC;IAErD,OAAO,MAAM;MACX,IAAIR,YAAY,CAACE,OAAO,EAAE;QACxBsB,oBAAoB,CAACxB,YAAY,CAACE,OAAO,CAAC;MAC5C;IACF,CAAC;EACH,CAAC,EAAE,CAACR,QAAQ,EAAEC,KAAK,EAAEC,aAAa,CAAC,CAAC;EAEpC,oBACEP,OAAA;IAAMoC,GAAG,EAAE3B,UAAW;IAACN,SAAS,EAAEA,SAAU;IAAAD,QAAA,EACzCA;EAAQ;IAAAmC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEX,CAAC;AAAChC,EAAA,CA/DIP,aAAa;AAAAwC,EAAA,GAAbxC,aAAa;AAiEnB,eAAeA,aAAa;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}