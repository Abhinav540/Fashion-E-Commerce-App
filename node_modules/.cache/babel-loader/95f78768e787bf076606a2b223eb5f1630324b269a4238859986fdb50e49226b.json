{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\OneDrive\\\\Desktop\\\\react\\\\project1\\\\src\\\\components\\\\DomeGallery.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect, useMemo, useRef, useCallback } from 'react';\nimport { useGesture } from '@use-gesture/react';\nimport '../styles/';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_IMAGES = [{\n  src: 'https://images.unsplash.com/photo-1755331039789-7e5680e26e8f?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  alt: 'Abstract art'\n}, {\n  src: 'https://images.unsplash.com/photo-1755569309049-98410b94f66d?q=80&w=772&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  alt: 'Modern sculpture'\n}, {\n  src: 'https://images.unsplash.com/photo-1755497595318-7e5e3523854f?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  alt: 'Digital artwork'\n}, {\n  src: 'https://images.unsplash.com/photo-1755353985163-c2a0fe5ac3d8?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  alt: 'Contemporary art'\n}, {\n  src: 'https://images.unsplash.com/photo-1745965976680-d00be7dc0377?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  alt: 'Geometric pattern'\n}, {\n  src: 'https://images.unsplash.com/photo-1752588975228-21f44630bb3c?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\n  alt: 'Textured surface'\n}, {\n  src: 'https://pbs.twimg.com/media/Gyla7NnXMAAXSo_?format=jpg&name=large',\n  alt: 'Social media image'\n}];\nconst DEFAULTS = {\n  maxVerticalRotationDeg: 5,\n  dragSensitivity: 20,\n  enlargeTransitionMs: 300,\n  segments: 35\n};\nconst clamp = (v, min, max) => Math.min(Math.max(v, min), max);\nconst normalizeAngle = d => (d % 360 + 360) % 360;\nconst wrapAngleSigned = deg => {\n  const a = ((deg + 180) % 360 + 360) % 360;\n  return a - 180;\n};\nconst getDataNumber = (el, name, fallback) => {\n  var _el$dataset$name;\n  const attr = (_el$dataset$name = el.dataset[name]) !== null && _el$dataset$name !== void 0 ? _el$dataset$name : el.getAttribute(`data-${name}`);\n  const n = attr == null ? NaN : parseFloat(attr);\n  return Number.isFinite(n) ? n : fallback;\n};\nfunction buildItems(pool, seg) {\n  const xCols = Array.from({\n    length: seg\n  }, (_, i) => -37 + i * 2);\n  const evenYs = [-4, -2, 0, 2, 4];\n  const oddYs = [-3, -1, 1, 3, 5];\n  const coords = xCols.flatMap((x, c) => {\n    const ys = c % 2 === 0 ? evenYs : oddYs;\n    return ys.map(y => ({\n      x,\n      y,\n      sizeX: 2,\n      sizeY: 2\n    }));\n  });\n  const totalSlots = coords.length;\n  if (pool.length === 0) {\n    return coords.map(c => ({\n      ...c,\n      src: '',\n      alt: ''\n    }));\n  }\n  if (pool.length > totalSlots) {\n    console.warn(`[DomeGallery] Provided image count (${pool.length}) exceeds available tiles (${totalSlots}). Some images will not be shown.`);\n  }\n  const normalizedImages = pool.map(image => {\n    if (typeof image === 'string') {\n      return {\n        src: image,\n        alt: ''\n      };\n    }\n    return {\n      src: image.src || '',\n      alt: image.alt || ''\n    };\n  });\n  const usedImages = Array.from({\n    length: totalSlots\n  }, (_, i) => normalizedImages[i % normalizedImages.length]);\n  for (let i = 1; i < usedImages.length; i++) {\n    if (usedImages[i].src === usedImages[i - 1].src) {\n      for (let j = i + 1; j < usedImages.length; j++) {\n        if (usedImages[j].src !== usedImages[i].src) {\n          const tmp = usedImages[i];\n          usedImages[i] = usedImages[j];\n          usedImages[j] = tmp;\n          break;\n        }\n      }\n    }\n  }\n  return coords.map((c, i) => ({\n    ...c,\n    src: usedImages[i].src,\n    alt: usedImages[i].alt\n  }));\n}\nfunction computeItemBaseRotation(offsetX, offsetY, sizeX, sizeY, segments) {\n  const unit = 360 / segments / 2;\n  const rotateY = unit * (offsetX + (sizeX - 1) / 2);\n  const rotateX = unit * (offsetY - (sizeY - 1) / 2);\n  return {\n    rotateX,\n    rotateY\n  };\n}\nexport default function DomeGallery({\n  images = DEFAULT_IMAGES,\n  fit = 0.5,\n  fitBasis = 'auto',\n  minRadius = 600,\n  maxRadius = Infinity,\n  padFactor = 0.25,\n  overlayBlurColor = '#060010',\n  maxVerticalRotationDeg = DEFAULTS.maxVerticalRotationDeg,\n  dragSensitivity = DEFAULTS.dragSensitivity,\n  enlargeTransitionMs = DEFAULTS.enlargeTransitionMs,\n  segments = DEFAULTS.segments,\n  dragDampening = 2,\n  openedImageWidth = '250px',\n  openedImageHeight = '350px',\n  imageBorderRadius = '30px',\n  openedImageBorderRadius = '30px',\n  grayscale = true\n}) {\n  _s();\n  const rootRef = useRef(null);\n  const mainRef = useRef(null);\n  const sphereRef = useRef(null);\n  const frameRef = useRef(null);\n  const viewerRef = useRef(null);\n  const scrimRef = useRef(null);\n  const focusedElRef = useRef(null);\n  const originalTilePositionRef = useRef(null);\n  const rotationRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const startRotRef = useRef({\n    x: 0,\n    y: 0\n  });\n  const startPosRef = useRef(null);\n  const draggingRef = useRef(false);\n  const movedRef = useRef(false);\n  const inertiaRAF = useRef(null);\n  const openingRef = useRef(false);\n  const openStartedAtRef = useRef(0);\n  const lastDragEndAt = useRef(0);\n  const scrollLockedRef = useRef(false);\n  const lockScroll = useCallback(() => {\n    if (scrollLockedRef.current) return;\n    scrollLockedRef.current = true;\n    document.body.classList.add('dg-scroll-lock');\n  }, []);\n  const unlockScroll = useCallback(() => {\n    var _rootRef$current;\n    if (!scrollLockedRef.current) return;\n    if (((_rootRef$current = rootRef.current) === null || _rootRef$current === void 0 ? void 0 : _rootRef$current.getAttribute('data-enlarging')) === 'true') return;\n    scrollLockedRef.current = false;\n    document.body.classList.remove('dg-scroll-lock');\n  }, []);\n  const items = useMemo(() => buildItems(images, segments), [images, segments]);\n  const applyTransform = (xDeg, yDeg) => {\n    const el = sphereRef.current;\n    if (el) {\n      el.style.transform = `translateZ(calc(var(--radius) * -1)) rotateX(${xDeg}deg) rotateY(${yDeg}deg)`;\n    }\n  };\n  const lockedRadiusRef = useRef(null);\n  useEffect(() => {\n    const root = rootRef.current;\n    if (!root) return;\n    const ro = new ResizeObserver(entries => {\n      var _viewerRef$current;\n      const cr = entries[0].contentRect;\n      const w = Math.max(1, cr.width),\n        h = Math.max(1, cr.height);\n      const minDim = Math.min(w, h),\n        maxDim = Math.max(w, h),\n        aspect = w / h;\n      let basis;\n      switch (fitBasis) {\n        case 'min':\n          basis = minDim;\n          break;\n        case 'max':\n          basis = maxDim;\n          break;\n        case 'width':\n          basis = w;\n          break;\n        case 'height':\n          basis = h;\n          break;\n        default:\n          basis = aspect >= 1.3 ? w : minDim;\n      }\n      let radius = basis * fit;\n      const heightGuard = h * 1.35;\n      radius = Math.min(radius, heightGuard);\n      radius = clamp(radius, minRadius, maxRadius);\n      lockedRadiusRef.current = Math.round(radius);\n      const viewerPad = Math.max(8, Math.round(minDim * padFactor));\n      root.style.setProperty('--radius', `${lockedRadiusRef.current}px`);\n      root.style.setProperty('--viewer-pad', `${viewerPad}px`);\n      root.style.setProperty('--overlay-blur-color', overlayBlurColor);\n      root.style.setProperty('--tile-radius', imageBorderRadius);\n      root.style.setProperty('--enlarge-radius', openedImageBorderRadius);\n      root.style.setProperty('--image-filter', grayscale ? 'grayscale(1)' : 'none');\n      applyTransform(rotationRef.current.x, rotationRef.current.y);\n      const enlargedOverlay = (_viewerRef$current = viewerRef.current) === null || _viewerRef$current === void 0 ? void 0 : _viewerRef$current.querySelector('.enlarge');\n      if (enlargedOverlay && frameRef.current && mainRef.current) {\n        const frameR = frameRef.current.getBoundingClientRect();\n        const mainR = mainRef.current.getBoundingClientRect();\n        const hasCustomSize = openedImageWidth && openedImageHeight;\n        if (hasCustomSize) {\n          const tempDiv = document.createElement('div');\n          tempDiv.style.cssText = `position: absolute; width: ${openedImageWidth}; height: ${openedImageHeight}; visibility: hidden;`;\n          document.body.appendChild(tempDiv);\n          const tempRect = tempDiv.getBoundingClientRect();\n          document.body.removeChild(tempDiv);\n          const centeredLeft = frameR.left - mainR.left + (frameR.width - tempRect.width) / 2;\n          const centeredTop = frameR.top - mainR.top + (frameR.height - tempRect.height) / 2;\n          enlargedOverlay.style.left = `${centeredLeft}px`;\n          enlargedOverlay.style.top = `${centeredTop}px`;\n        } else {\n          enlargedOverlay.style.left = `${frameR.left - mainR.left}px`;\n          enlargedOverlay.style.top = `${frameR.top - mainR.top}px`;\n          enlargedOverlay.style.width = `${frameR.width}px`;\n          enlargedOverlay.style.height = `${frameR.height}px`;\n        }\n      }\n    });\n    ro.observe(root);\n    return () => ro.disconnect();\n  }, [fit, fitBasis, minRadius, maxRadius, padFactor, overlayBlurColor, grayscale, imageBorderRadius, openedImageBorderRadius, openedImageWidth, openedImageHeight]);\n  useEffect(() => {\n    applyTransform(rotationRef.current.x, rotationRef.current.y);\n  }, []);\n  const stopInertia = useCallback(() => {\n    if (inertiaRAF.current) {\n      cancelAnimationFrame(inertiaRAF.current);\n      inertiaRAF.current = null;\n    }\n  }, []);\n  const startInertia = useCallback((vx, vy) => {\n    const MAX_V = 1.4;\n    let vX = clamp(vx, -MAX_V, MAX_V) * 80;\n    let vY = clamp(vy, -MAX_V, MAX_V) * 80;\n    let frames = 0;\n    const d = clamp(dragDampening !== null && dragDampening !== void 0 ? dragDampening : 0.6, 0, 1);\n    const frictionMul = 0.94 + 0.055 * d;\n    const stopThreshold = 0.015 - 0.01 * d;\n    const maxFrames = Math.round(90 + 270 * d);\n    const step = () => {\n      vX *= frictionMul;\n      vY *= frictionMul;\n      if (Math.abs(vX) < stopThreshold && Math.abs(vY) < stopThreshold) {\n        inertiaRAF.current = null;\n        return;\n      }\n      if (++frames > maxFrames) {\n        inertiaRAF.current = null;\n        return;\n      }\n      const nextX = clamp(rotationRef.current.x - vY / 200, -maxVerticalRotationDeg, maxVerticalRotationDeg);\n      const nextY = wrapAngleSigned(rotationRef.current.y + vX / 200);\n      rotationRef.current = {\n        x: nextX,\n        y: nextY\n      };\n      applyTransform(nextX, nextY);\n      inertiaRAF.current = requestAnimationFrame(step);\n    };\n    stopInertia();\n    inertiaRAF.current = requestAnimationFrame(step);\n  }, [dragDampening, maxVerticalRotationDeg, stopInertia]);\n  useGesture({\n    onDragStart: ({\n      event\n    }) => {\n      if (focusedElRef.current) return;\n      stopInertia();\n      const evt = event;\n      draggingRef.current = true;\n      movedRef.current = false;\n      startRotRef.current = {\n        ...rotationRef.current\n      };\n      startPosRef.current = {\n        x: evt.clientX,\n        y: evt.clientY\n      };\n    },\n    onDrag: ({\n      event,\n      last,\n      velocity = [0, 0],\n      direction = [0, 0],\n      movement\n    }) => {\n      if (focusedElRef.current || !draggingRef.current || !startPosRef.current) return;\n      const evt = event;\n      const dxTotal = evt.clientX - startPosRef.current.x;\n      const dyTotal = evt.clientY - startPosRef.current.y;\n      if (!movedRef.current) {\n        const dist2 = dxTotal * dxTotal + dyTotal * dyTotal;\n        if (dist2 > 16) movedRef.current = true;\n      }\n      const nextX = clamp(startRotRef.current.x - dyTotal / dragSensitivity, -maxVerticalRotationDeg, maxVerticalRotationDeg);\n      const nextY = wrapAngleSigned(startRotRef.current.y + dxTotal / dragSensitivity);\n      if (rotationRef.current.x !== nextX || rotationRef.current.y !== nextY) {\n        rotationRef.current = {\n          x: nextX,\n          y: nextY\n        };\n        applyTransform(nextX, nextY);\n      }\n      if (last) {\n        draggingRef.current = false;\n        let [vMagX, vMagY] = velocity;\n        const [dirX, dirY] = direction;\n        let vx = vMagX * dirX;\n        let vy = vMagY * dirY;\n        if (Math.abs(vx) < 0.001 && Math.abs(vy) < 0.001 && Array.isArray(movement)) {\n          const [mx, my] = movement;\n          vx = clamp(mx / dragSensitivity * 0.02, -1.2, 1.2);\n          vy = clamp(my / dragSensitivity * 0.02, -1.2, 1.2);\n        }\n        if (Math.abs(vx) > 0.005 || Math.abs(vy) > 0.005) startInertia(vx, vy);\n        if (movedRef.current) lastDragEndAt.current = performance.now();\n        movedRef.current = false;\n      }\n    }\n  }, {\n    target: mainRef,\n    eventOptions: {\n      passive: true\n    }\n  });\n  useEffect(() => {\n    const scrim = scrimRef.current;\n    if (!scrim) return;\n    const close = () => {\n      var _viewerRef$current2;\n      if (performance.now() - openStartedAtRef.current < 250) return;\n      const el = focusedElRef.current;\n      if (!el) return;\n      const parent = el.parentElement;\n      const overlay = (_viewerRef$current2 = viewerRef.current) === null || _viewerRef$current2 === void 0 ? void 0 : _viewerRef$current2.querySelector('.enlarge');\n      if (!overlay) return;\n      const refDiv = parent.querySelector('.item__image--reference');\n      const originalPos = originalTilePositionRef.current;\n      if (!originalPos) {\n        var _rootRef$current2;\n        overlay.remove();\n        if (refDiv) refDiv.remove();\n        parent.style.setProperty('--rot-y-delta', '0deg');\n        parent.style.setProperty('--rot-x-delta', '0deg');\n        el.style.visibility = '';\n        el.style.zIndex = 0;\n        focusedElRef.current = null;\n        (_rootRef$current2 = rootRef.current) === null || _rootRef$current2 === void 0 ? void 0 : _rootRef$current2.removeAttribute('data-enlarging');\n        openingRef.current = false;\n        unlockScroll();\n        return;\n      }\n      const currentRect = overlay.getBoundingClientRect();\n      const rootRect = rootRef.current.getBoundingClientRect();\n      const originalPosRelativeToRoot = {\n        left: originalPos.left - rootRect.left,\n        top: originalPos.top - rootRect.top,\n        width: originalPos.width,\n        height: originalPos.height\n      };\n      const overlayRelativeToRoot = {\n        left: currentRect.left - rootRect.left,\n        top: currentRect.top - rootRect.top,\n        width: currentRect.width,\n        height: currentRect.height\n      };\n      const animatingOverlay = document.createElement('div');\n      animatingOverlay.className = 'enlarge-closing';\n      animatingOverlay.style.cssText = `position:absolute;left:${overlayRelativeToRoot.left}px;top:${overlayRelativeToRoot.top}px;width:${overlayRelativeToRoot.width}px;height:${overlayRelativeToRoot.height}px;z-index:9999;border-radius: var(--enlarge-radius, 32px);overflow:hidden;box-shadow:0 10px 30px rgba(0,0,0,.35);transition:all ${enlargeTransitionMs}ms ease-out;pointer-events:none;margin:0;transform:none;`;\n      const originalImg = overlay.querySelector('img');\n      if (originalImg) {\n        const img = originalImg.cloneNode();\n        img.style.cssText = 'width:100%;height:100%;object-fit:cover;';\n        animatingOverlay.appendChild(img);\n      }\n      overlay.remove();\n      rootRef.current.appendChild(animatingOverlay);\n      void animatingOverlay.getBoundingClientRect();\n      requestAnimationFrame(() => {\n        animatingOverlay.style.left = originalPosRelativeToRoot.left + 'px';\n        animatingOverlay.style.top = originalPosRelativeToRoot.top + 'px';\n        animatingOverlay.style.width = originalPosRelativeToRoot.width + 'px';\n        animatingOverlay.style.height = originalPosRelativeToRoot.height + 'px';\n        animatingOverlay.style.opacity = '0';\n      });\n      const cleanup = () => {\n        animatingOverlay.remove();\n        originalTilePositionRef.current = null;\n        if (refDiv) refDiv.remove();\n        parent.style.transition = 'none';\n        el.style.transition = 'none';\n        parent.style.setProperty('--rot-y-delta', '0deg');\n        parent.style.setProperty('--rot-x-delta', '0deg');\n        requestAnimationFrame(() => {\n          var _rootRef$current3;\n          el.style.visibility = '';\n          el.style.opacity = '0';\n          el.style.zIndex = 0;\n          focusedElRef.current = null;\n          (_rootRef$current3 = rootRef.current) === null || _rootRef$current3 === void 0 ? void 0 : _rootRef$current3.removeAttribute('data-enlarging');\n          requestAnimationFrame(() => {\n            parent.style.transition = '';\n            el.style.transition = 'opacity 300ms ease-out';\n            requestAnimationFrame(() => {\n              el.style.opacity = '1';\n              setTimeout(() => {\n                var _rootRef$current4;\n                el.style.transition = '';\n                el.style.opacity = '';\n                openingRef.current = false;\n                if (!draggingRef.current && ((_rootRef$current4 = rootRef.current) === null || _rootRef$current4 === void 0 ? void 0 : _rootRef$current4.getAttribute('data-enlarging')) !== 'true') document.body.classList.remove('dg-scroll-lock');\n              }, 300);\n            });\n          });\n        });\n      };\n      animatingOverlay.addEventListener('transitionend', cleanup, {\n        once: true\n      });\n    };\n    scrim.addEventListener('click', close);\n    const onKey = e => {\n      if (e.key === 'Escape') close();\n    };\n    window.addEventListener('keydown', onKey);\n    return () => {\n      scrim.removeEventListener('click', close);\n      window.removeEventListener('keydown', onKey);\n    };\n  }, [enlargeTransitionMs, unlockScroll]);\n  const openItemFromElement = useCallback(el => {\n    var _el$querySelector;\n    if (openingRef.current) return;\n    openingRef.current = true;\n    openStartedAtRef.current = performance.now();\n    lockScroll();\n    const parent = el.parentElement;\n    focusedElRef.current = el;\n    el.setAttribute('data-focused', 'true');\n    const offsetX = getDataNumber(parent, 'offsetX', 0);\n    const offsetY = getDataNumber(parent, 'offsetY', 0);\n    const sizeX = getDataNumber(parent, 'sizeX', 2);\n    const sizeY = getDataNumber(parent, 'sizeY', 2);\n    const parentRot = computeItemBaseRotation(offsetX, offsetY, sizeX, sizeY, segments);\n    const parentY = normalizeAngle(parentRot.rotateY);\n    const globalY = normalizeAngle(rotationRef.current.y);\n    let rotY = -(parentY + globalY) % 360;\n    if (rotY < -180) rotY += 360;\n    const rotX = -parentRot.rotateX - rotationRef.current.x;\n    parent.style.setProperty('--rot-y-delta', `${rotY}deg`);\n    parent.style.setProperty('--rot-x-delta', `${rotX}deg`);\n    const refDiv = document.createElement('div');\n    refDiv.className = 'item__image item__image--reference';\n    refDiv.style.opacity = '0';\n    refDiv.style.transform = `rotateX(${-parentRot.rotateX}deg) rotateY(${-parentRot.rotateY}deg)`;\n    parent.appendChild(refDiv);\n    const tileR = refDiv.getBoundingClientRect();\n    const mainR = mainRef.current.getBoundingClientRect();\n    const frameR = frameRef.current.getBoundingClientRect();\n    originalTilePositionRef.current = {\n      left: tileR.left,\n      top: tileR.top,\n      width: tileR.width,\n      height: tileR.height\n    };\n    el.style.visibility = 'hidden';\n    el.style.zIndex = 0;\n    const overlay = document.createElement('div');\n    overlay.className = 'enlarge';\n    overlay.style.position = 'absolute';\n    overlay.style.left = frameR.left - mainR.left + 'px';\n    overlay.style.top = frameR.top - mainR.top + 'px';\n    overlay.style.width = frameR.width + 'px';\n    overlay.style.height = frameR.height + 'px';\n    overlay.style.opacity = '0';\n    overlay.style.zIndex = '30';\n    overlay.style.willChange = 'transform, opacity';\n    overlay.style.transformOrigin = 'top left';\n    overlay.style.transition = `transform ${enlargeTransitionMs}ms ease, opacity ${enlargeTransitionMs}ms ease`;\n    const rawSrc = parent.dataset.src || ((_el$querySelector = el.querySelector('img')) === null || _el$querySelector === void 0 ? void 0 : _el$querySelector.src) || '';\n    const img = document.createElement('img');\n    img.src = rawSrc;\n    overlay.appendChild(img);\n    viewerRef.current.appendChild(overlay);\n    const tx0 = tileR.left - frameR.left;\n    const ty0 = tileR.top - frameR.top;\n    const sx0 = tileR.width / frameR.width;\n    const sy0 = tileR.height / frameR.height;\n    overlay.style.transform = `translate(${tx0}px, ${ty0}px) scale(${sx0}, ${sy0})`;\n    requestAnimationFrame(() => {\n      var _rootRef$current5;\n      overlay.style.opacity = '1';\n      overlay.style.transform = 'translate(0px, 0px) scale(1,1)';\n      (_rootRef$current5 = rootRef.current) === null || _rootRef$current5 === void 0 ? void 0 : _rootRef$current5.setAttribute('data-enlarging', 'true');\n    });\n    const wantsResize = openedImageWidth || openedImageHeight;\n    if (wantsResize) {\n      const onFirstEnd = ev => {\n        if (ev.propertyName !== 'transform') return;\n        overlay.removeEventListener('transitionend', onFirstEnd);\n        const prevTransition = overlay.style.transition;\n        overlay.style.transition = 'none';\n        const tempWidth = openedImageWidth || `${frameR.width}px`;\n        const tempHeight = openedImageHeight || `${frameR.height}px`;\n        overlay.style.width = tempWidth;\n        overlay.style.height = tempHeight;\n        const newRect = overlay.getBoundingClientRect();\n        overlay.style.width = frameR.width + 'px';\n        overlay.style.height = frameR.height + 'px';\n        void overlay.offsetWidth;\n        overlay.style.transition = `left ${enlargeTransitionMs}ms ease, top ${enlargeTransitionMs}ms ease, width ${enlargeTransitionMs}ms ease, height ${enlargeTransitionMs}ms ease`;\n        const centeredLeft = frameR.left - mainR.left + (frameR.width - newRect.width) / 2;\n        const centeredTop = frameR.top - mainR.top + (frameR.height - newRect.height) / 2;\n        requestAnimationFrame(() => {\n          overlay.style.left = `${centeredLeft}px`;\n          overlay.style.top = `${centeredTop}px`;\n          overlay.style.width = tempWidth;\n          overlay.style.height = tempHeight;\n        });\n        const cleanupSecond = () => {\n          overlay.removeEventListener('transitionend', cleanupSecond);\n          overlay.style.transition = prevTransition;\n        };\n        overlay.addEventListener('transitionend', cleanupSecond, {\n          once: true\n        });\n      };\n      overlay.addEventListener('transitionend', onFirstEnd);\n    }\n  }, [enlargeTransitionMs, lockScroll, openedImageHeight, openedImageWidth, segments]);\n  const onTileClick = useCallback(e => {\n    if (draggingRef.current) return;\n    if (performance.now() - lastDragEndAt.current < 80) return;\n    if (openingRef.current) return;\n    openItemFromElement(e.currentTarget);\n  }, [openItemFromElement]);\n  const onTilePointerUp = useCallback(e => {\n    if (e.pointerType !== 'touch') return;\n    if (draggingRef.current) return;\n    if (performance.now() - lastDragEndAt.current < 80) return;\n    if (openingRef.current) return;\n    openItemFromElement(e.currentTarget);\n  }, [openItemFromElement]);\n  const onTileTouchEnd = useCallback(e => {\n    if (draggingRef.current) return;\n    if (performance.now() - lastDragEndAt.current < 80) return;\n    if (openingRef.current) return;\n    openItemFromElement(e.currentTarget);\n  }, [openItemFromElement]);\n  useEffect(() => {\n    return () => {\n      document.body.classList.remove('dg-scroll-lock');\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: rootRef,\n    className: \"sphere-root\",\n    style: {\n      ['--segments-x']: segments,\n      ['--segments-y']: segments,\n      ['--overlay-blur-color']: overlayBlurColor,\n      ['--tile-radius']: imageBorderRadius,\n      ['--enlarge-radius']: openedImageBorderRadius,\n      ['--image-filter']: grayscale ? 'grayscale(1)' : 'none'\n    },\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      ref: mainRef,\n      className: \"sphere-main\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"stage\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: sphereRef,\n          className: \"sphere\",\n          children: items.map((it, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"item\",\n            \"data-src\": it.src,\n            \"data-offset-x\": it.x,\n            \"data-offset-y\": it.y,\n            \"data-size-x\": it.sizeX,\n            \"data-size-y\": it.sizeY,\n            style: {\n              ['--offset-x']: it.x,\n              ['--offset-y']: it.y,\n              ['--item-size-x']: it.sizeX,\n              ['--item-size-y']: it.sizeY\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"item__image\",\n              role: \"button\",\n              tabIndex: 0,\n              \"aria-label\": it.alt || 'Open image',\n              onClick: onTileClick,\n              onPointerUp: onTilePointerUp,\n              onTouchEnd: onTileTouchEnd,\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: it.src,\n                draggable: false,\n                alt: it.alt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 622,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 613,\n              columnNumber: 17\n            }, this)\n          }, `${it.x},${it.y},${i}`, false, {\n            fileName: _jsxFileName,\n            lineNumber: 598,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 596,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 595,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 629,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"overlay overlay--blur\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 630,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edge-fade edge-fade--top\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 631,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edge-fade edge-fade--bottom\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 632,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"viewer\",\n        ref: viewerRef,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          ref: scrimRef,\n          className: \"scrim\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 635,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: frameRef,\n          className: \"frame\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 636,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 634,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 594,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 582,\n    columnNumber: 5\n  }, this);\n}\n_s(DomeGallery, \"pKaE7xMQVUo0Tqju8EaEATG13s8=\", false, function () {\n  return [useGesture];\n});\n_c = DomeGallery;\nvar _c;\n$RefreshReg$(_c, \"DomeGallery\");","map":{"version":3,"names":["useEffect","useMemo","useRef","useCallback","useGesture","jsxDEV","_jsxDEV","DEFAULT_IMAGES","src","alt","DEFAULTS","maxVerticalRotationDeg","dragSensitivity","enlargeTransitionMs","segments","clamp","v","min","max","Math","normalizeAngle","d","wrapAngleSigned","deg","a","getDataNumber","el","name","fallback","_el$dataset$name","attr","dataset","getAttribute","n","NaN","parseFloat","Number","isFinite","buildItems","pool","seg","xCols","Array","from","length","_","i","evenYs","oddYs","coords","flatMap","x","c","ys","map","y","sizeX","sizeY","totalSlots","console","warn","normalizedImages","image","usedImages","j","tmp","computeItemBaseRotation","offsetX","offsetY","unit","rotateY","rotateX","DomeGallery","images","fit","fitBasis","minRadius","maxRadius","Infinity","padFactor","overlayBlurColor","dragDampening","openedImageWidth","openedImageHeight","imageBorderRadius","openedImageBorderRadius","grayscale","_s","rootRef","mainRef","sphereRef","frameRef","viewerRef","scrimRef","focusedElRef","originalTilePositionRef","rotationRef","startRotRef","startPosRef","draggingRef","movedRef","inertiaRAF","openingRef","openStartedAtRef","lastDragEndAt","scrollLockedRef","lockScroll","current","document","body","classList","add","unlockScroll","_rootRef$current","remove","items","applyTransform","xDeg","yDeg","style","transform","lockedRadiusRef","root","ro","ResizeObserver","entries","_viewerRef$current","cr","contentRect","w","width","h","height","minDim","maxDim","aspect","basis","radius","heightGuard","round","viewerPad","setProperty","enlargedOverlay","querySelector","frameR","getBoundingClientRect","mainR","hasCustomSize","tempDiv","createElement","cssText","appendChild","tempRect","removeChild","centeredLeft","left","centeredTop","top","observe","disconnect","stopInertia","cancelAnimationFrame","startInertia","vx","vy","MAX_V","vX","vY","frames","frictionMul","stopThreshold","maxFrames","step","abs","nextX","nextY","requestAnimationFrame","onDragStart","event","evt","clientX","clientY","onDrag","last","velocity","direction","movement","dxTotal","dyTotal","dist2","vMagX","vMagY","dirX","dirY","isArray","mx","my","performance","now","target","eventOptions","passive","scrim","close","_viewerRef$current2","parent","parentElement","overlay","refDiv","originalPos","_rootRef$current2","visibility","zIndex","removeAttribute","currentRect","rootRect","originalPosRelativeToRoot","overlayRelativeToRoot","animatingOverlay","className","originalImg","img","cloneNode","opacity","cleanup","transition","_rootRef$current3","setTimeout","_rootRef$current4","addEventListener","once","onKey","e","key","window","removeEventListener","openItemFromElement","_el$querySelector","setAttribute","parentRot","parentY","globalY","rotY","rotX","tileR","position","willChange","transformOrigin","rawSrc","tx0","ty0","sx0","sy0","_rootRef$current5","wantsResize","onFirstEnd","ev","propertyName","prevTransition","tempWidth","tempHeight","newRect","offsetWidth","cleanupSecond","onTileClick","currentTarget","onTilePointerUp","pointerType","onTileTouchEnd","ref","children","it","role","tabIndex","onClick","onPointerUp","onTouchEnd","draggable","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/ASUS/OneDrive/Desktop/react/project1/src/components/DomeGallery.jsx"],"sourcesContent":["import { useEffect, useMemo, useRef, useCallback } from 'react';\r\nimport { useGesture } from '@use-gesture/react';\r\nimport '../styles/'\r\n\r\nconst DEFAULT_IMAGES = [\r\n  {\r\n    src: 'https://images.unsplash.com/photo-1755331039789-7e5680e26e8f?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    alt: 'Abstract art'\r\n  },\r\n  {\r\n    src: 'https://images.unsplash.com/photo-1755569309049-98410b94f66d?q=80&w=772&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    alt: 'Modern sculpture'\r\n  },\r\n  {\r\n    src: 'https://images.unsplash.com/photo-1755497595318-7e5e3523854f?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    alt: 'Digital artwork'\r\n  },\r\n  {\r\n    src: 'https://images.unsplash.com/photo-1755353985163-c2a0fe5ac3d8?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    alt: 'Contemporary art'\r\n  },\r\n  {\r\n    src: 'https://images.unsplash.com/photo-1745965976680-d00be7dc0377?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    alt: 'Geometric pattern'\r\n  },\r\n  {\r\n    src: 'https://images.unsplash.com/photo-1752588975228-21f44630bb3c?q=80&w=774&auto=format&fit=crop&ixlib=rb-4.1.0&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D',\r\n    alt: 'Textured surface'\r\n  },\r\n  { src: 'https://pbs.twimg.com/media/Gyla7NnXMAAXSo_?format=jpg&name=large', alt: 'Social media image' }\r\n];\r\n\r\nconst DEFAULTS = {\r\n  maxVerticalRotationDeg: 5,\r\n  dragSensitivity: 20,\r\n  enlargeTransitionMs: 300,\r\n  segments: 35\r\n};\r\n\r\nconst clamp = (v, min, max) => Math.min(Math.max(v, min), max);\r\nconst normalizeAngle = d => ((d % 360) + 360) % 360;\r\nconst wrapAngleSigned = deg => {\r\n  const a = (((deg + 180) % 360) + 360) % 360;\r\n  return a - 180;\r\n};\r\nconst getDataNumber = (el, name, fallback) => {\r\n  const attr = el.dataset[name] ?? el.getAttribute(`data-${name}`);\r\n  const n = attr == null ? NaN : parseFloat(attr);\r\n  return Number.isFinite(n) ? n : fallback;\r\n};\r\n\r\nfunction buildItems(pool, seg) {\r\n  const xCols = Array.from({ length: seg }, (_, i) => -37 + i * 2);\r\n  const evenYs = [-4, -2, 0, 2, 4];\r\n  const oddYs = [-3, -1, 1, 3, 5];\r\n\r\n  const coords = xCols.flatMap((x, c) => {\r\n    const ys = c % 2 === 0 ? evenYs : oddYs;\r\n    return ys.map(y => ({ x, y, sizeX: 2, sizeY: 2 }));\r\n  });\r\n\r\n  const totalSlots = coords.length;\r\n  if (pool.length === 0) {\r\n    return coords.map(c => ({ ...c, src: '', alt: '' }));\r\n  }\r\n  if (pool.length > totalSlots) {\r\n    console.warn(\r\n      `[DomeGallery] Provided image count (${pool.length}) exceeds available tiles (${totalSlots}). Some images will not be shown.`\r\n    );\r\n  }\r\n\r\n  const normalizedImages = pool.map(image => {\r\n    if (typeof image === 'string') {\r\n      return { src: image, alt: '' };\r\n    }\r\n    return { src: image.src || '', alt: image.alt || '' };\r\n  });\r\n\r\n  const usedImages = Array.from({ length: totalSlots }, (_, i) => normalizedImages[i % normalizedImages.length]);\r\n\r\n  for (let i = 1; i < usedImages.length; i++) {\r\n    if (usedImages[i].src === usedImages[i - 1].src) {\r\n      for (let j = i + 1; j < usedImages.length; j++) {\r\n        if (usedImages[j].src !== usedImages[i].src) {\r\n          const tmp = usedImages[i];\r\n          usedImages[i] = usedImages[j];\r\n          usedImages[j] = tmp;\r\n          break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  return coords.map((c, i) => ({\r\n    ...c,\r\n    src: usedImages[i].src,\r\n    alt: usedImages[i].alt\r\n  }));\r\n}\r\n\r\nfunction computeItemBaseRotation(offsetX, offsetY, sizeX, sizeY, segments) {\r\n  const unit = 360 / segments / 2;\r\n  const rotateY = unit * (offsetX + (sizeX - 1) / 2);\r\n  const rotateX = unit * (offsetY - (sizeY - 1) / 2);\r\n  return { rotateX, rotateY };\r\n}\r\n\r\nexport default function DomeGallery({\r\n  images = DEFAULT_IMAGES,\r\n  fit = 0.5,\r\n  fitBasis = 'auto',\r\n  minRadius = 600,\r\n  maxRadius = Infinity,\r\n  padFactor = 0.25,\r\n  overlayBlurColor = '#060010',\r\n  maxVerticalRotationDeg = DEFAULTS.maxVerticalRotationDeg,\r\n  dragSensitivity = DEFAULTS.dragSensitivity,\r\n  enlargeTransitionMs = DEFAULTS.enlargeTransitionMs,\r\n  segments = DEFAULTS.segments,\r\n  dragDampening = 2,\r\n  openedImageWidth = '250px',\r\n  openedImageHeight = '350px',\r\n  imageBorderRadius = '30px',\r\n  openedImageBorderRadius = '30px',\r\n  grayscale = true\r\n}) {\r\n  const rootRef = useRef(null);\r\n  const mainRef = useRef(null);\r\n  const sphereRef = useRef(null);\r\n  const frameRef = useRef(null);\r\n  const viewerRef = useRef(null);\r\n  const scrimRef = useRef(null);\r\n  const focusedElRef = useRef(null);\r\n  const originalTilePositionRef = useRef(null);\r\n\r\n  const rotationRef = useRef({ x: 0, y: 0 });\r\n  const startRotRef = useRef({ x: 0, y: 0 });\r\n  const startPosRef = useRef(null);\r\n  const draggingRef = useRef(false);\r\n  const movedRef = useRef(false);\r\n  const inertiaRAF = useRef(null);\r\n  const openingRef = useRef(false);\r\n  const openStartedAtRef = useRef(0);\r\n  const lastDragEndAt = useRef(0);\r\n\r\n  const scrollLockedRef = useRef(false);\r\n  const lockScroll = useCallback(() => {\r\n    if (scrollLockedRef.current) return;\r\n    scrollLockedRef.current = true;\r\n    document.body.classList.add('dg-scroll-lock');\r\n  }, []);\r\n  const unlockScroll = useCallback(() => {\r\n    if (!scrollLockedRef.current) return;\r\n    if (rootRef.current?.getAttribute('data-enlarging') === 'true') return;\r\n    scrollLockedRef.current = false;\r\n    document.body.classList.remove('dg-scroll-lock');\r\n  }, []);\r\n\r\n  const items = useMemo(() => buildItems(images, segments), [images, segments]);\r\n\r\n  const applyTransform = (xDeg, yDeg) => {\r\n    const el = sphereRef.current;\r\n    if (el) {\r\n      el.style.transform = `translateZ(calc(var(--radius) * -1)) rotateX(${xDeg}deg) rotateY(${yDeg}deg)`;\r\n    }\r\n  };\r\n\r\n  const lockedRadiusRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const root = rootRef.current;\r\n    if (!root) return;\r\n    const ro = new ResizeObserver(entries => {\r\n      const cr = entries[0].contentRect;\r\n      const w = Math.max(1, cr.width),\r\n        h = Math.max(1, cr.height);\r\n      const minDim = Math.min(w, h),\r\n        maxDim = Math.max(w, h),\r\n        aspect = w / h;\r\n      let basis;\r\n      switch (fitBasis) {\r\n        case 'min':\r\n          basis = minDim;\r\n          break;\r\n        case 'max':\r\n          basis = maxDim;\r\n          break;\r\n        case 'width':\r\n          basis = w;\r\n          break;\r\n        case 'height':\r\n          basis = h;\r\n          break;\r\n        default:\r\n          basis = aspect >= 1.3 ? w : minDim;\r\n      }\r\n      let radius = basis * fit;\r\n      const heightGuard = h * 1.35;\r\n      radius = Math.min(radius, heightGuard);\r\n      radius = clamp(radius, minRadius, maxRadius);\r\n      lockedRadiusRef.current = Math.round(radius);\r\n\r\n      const viewerPad = Math.max(8, Math.round(minDim * padFactor));\r\n      root.style.setProperty('--radius', `${lockedRadiusRef.current}px`);\r\n      root.style.setProperty('--viewer-pad', `${viewerPad}px`);\r\n      root.style.setProperty('--overlay-blur-color', overlayBlurColor);\r\n      root.style.setProperty('--tile-radius', imageBorderRadius);\r\n      root.style.setProperty('--enlarge-radius', openedImageBorderRadius);\r\n      root.style.setProperty('--image-filter', grayscale ? 'grayscale(1)' : 'none');\r\n      applyTransform(rotationRef.current.x, rotationRef.current.y);\r\n\r\n      const enlargedOverlay = viewerRef.current?.querySelector('.enlarge');\r\n      if (enlargedOverlay && frameRef.current && mainRef.current) {\r\n        const frameR = frameRef.current.getBoundingClientRect();\r\n        const mainR = mainRef.current.getBoundingClientRect();\r\n\r\n        const hasCustomSize = openedImageWidth && openedImageHeight;\r\n        if (hasCustomSize) {\r\n          const tempDiv = document.createElement('div');\r\n          tempDiv.style.cssText = `position: absolute; width: ${openedImageWidth}; height: ${openedImageHeight}; visibility: hidden;`;\r\n          document.body.appendChild(tempDiv);\r\n          const tempRect = tempDiv.getBoundingClientRect();\r\n          document.body.removeChild(tempDiv);\r\n\r\n          const centeredLeft = frameR.left - mainR.left + (frameR.width - tempRect.width) / 2;\r\n          const centeredTop = frameR.top - mainR.top + (frameR.height - tempRect.height) / 2;\r\n\r\n          enlargedOverlay.style.left = `${centeredLeft}px`;\r\n          enlargedOverlay.style.top = `${centeredTop}px`;\r\n        } else {\r\n          enlargedOverlay.style.left = `${frameR.left - mainR.left}px`;\r\n          enlargedOverlay.style.top = `${frameR.top - mainR.top}px`;\r\n          enlargedOverlay.style.width = `${frameR.width}px`;\r\n          enlargedOverlay.style.height = `${frameR.height}px`;\r\n        }\r\n      }\r\n    });\r\n    ro.observe(root);\r\n    return () => ro.disconnect();\r\n  }, [\r\n    fit,\r\n    fitBasis,\r\n    minRadius,\r\n    maxRadius,\r\n    padFactor,\r\n    overlayBlurColor,\r\n    grayscale,\r\n    imageBorderRadius,\r\n    openedImageBorderRadius,\r\n    openedImageWidth,\r\n    openedImageHeight\r\n  ]);\r\n\r\n  useEffect(() => {\r\n    applyTransform(rotationRef.current.x, rotationRef.current.y);\r\n  }, []);\r\n\r\n  const stopInertia = useCallback(() => {\r\n    if (inertiaRAF.current) {\r\n      cancelAnimationFrame(inertiaRAF.current);\r\n      inertiaRAF.current = null;\r\n    }\r\n  }, []);\r\n\r\n  const startInertia = useCallback(\r\n    (vx, vy) => {\r\n      const MAX_V = 1.4;\r\n      let vX = clamp(vx, -MAX_V, MAX_V) * 80;\r\n      let vY = clamp(vy, -MAX_V, MAX_V) * 80;\r\n      let frames = 0;\r\n      const d = clamp(dragDampening ?? 0.6, 0, 1);\r\n      const frictionMul = 0.94 + 0.055 * d;\r\n      const stopThreshold = 0.015 - 0.01 * d;\r\n      const maxFrames = Math.round(90 + 270 * d);\r\n      const step = () => {\r\n        vX *= frictionMul;\r\n        vY *= frictionMul;\r\n        if (Math.abs(vX) < stopThreshold && Math.abs(vY) < stopThreshold) {\r\n          inertiaRAF.current = null;\r\n          return;\r\n        }\r\n        if (++frames > maxFrames) {\r\n          inertiaRAF.current = null;\r\n          return;\r\n        }\r\n        const nextX = clamp(rotationRef.current.x - vY / 200, -maxVerticalRotationDeg, maxVerticalRotationDeg);\r\n        const nextY = wrapAngleSigned(rotationRef.current.y + vX / 200);\r\n        rotationRef.current = { x: nextX, y: nextY };\r\n        applyTransform(nextX, nextY);\r\n        inertiaRAF.current = requestAnimationFrame(step);\r\n      };\r\n      stopInertia();\r\n      inertiaRAF.current = requestAnimationFrame(step);\r\n    },\r\n    [dragDampening, maxVerticalRotationDeg, stopInertia]\r\n  );\r\n\r\n  useGesture(\r\n    {\r\n      onDragStart: ({ event }) => {\r\n        if (focusedElRef.current) return;\r\n        stopInertia();\r\n        const evt = event;\r\n        draggingRef.current = true;\r\n        movedRef.current = false;\r\n        startRotRef.current = { ...rotationRef.current };\r\n        startPosRef.current = { x: evt.clientX, y: evt.clientY };\r\n      },\r\n      onDrag: ({ event, last, velocity = [0, 0], direction = [0, 0], movement }) => {\r\n        if (focusedElRef.current || !draggingRef.current || !startPosRef.current) return;\r\n        const evt = event;\r\n        const dxTotal = evt.clientX - startPosRef.current.x;\r\n        const dyTotal = evt.clientY - startPosRef.current.y;\r\n        if (!movedRef.current) {\r\n          const dist2 = dxTotal * dxTotal + dyTotal * dyTotal;\r\n          if (dist2 > 16) movedRef.current = true;\r\n        }\r\n        const nextX = clamp(\r\n          startRotRef.current.x - dyTotal / dragSensitivity,\r\n          -maxVerticalRotationDeg,\r\n          maxVerticalRotationDeg\r\n        );\r\n        const nextY = wrapAngleSigned(startRotRef.current.y + dxTotal / dragSensitivity);\r\n        if (rotationRef.current.x !== nextX || rotationRef.current.y !== nextY) {\r\n          rotationRef.current = { x: nextX, y: nextY };\r\n          applyTransform(nextX, nextY);\r\n        }\r\n        if (last) {\r\n          draggingRef.current = false;\r\n          let [vMagX, vMagY] = velocity;\r\n          const [dirX, dirY] = direction;\r\n          let vx = vMagX * dirX;\r\n          let vy = vMagY * dirY;\r\n          if (Math.abs(vx) < 0.001 && Math.abs(vy) < 0.001 && Array.isArray(movement)) {\r\n            const [mx, my] = movement;\r\n            vx = clamp((mx / dragSensitivity) * 0.02, -1.2, 1.2);\r\n            vy = clamp((my / dragSensitivity) * 0.02, -1.2, 1.2);\r\n          }\r\n          if (Math.abs(vx) > 0.005 || Math.abs(vy) > 0.005) startInertia(vx, vy);\r\n          if (movedRef.current) lastDragEndAt.current = performance.now();\r\n          movedRef.current = false;\r\n        }\r\n      }\r\n    },\r\n    { target: mainRef, eventOptions: { passive: true } }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const scrim = scrimRef.current;\r\n    if (!scrim) return;\r\n    const close = () => {\r\n      if (performance.now() - openStartedAtRef.current < 250) return;\r\n      const el = focusedElRef.current;\r\n      if (!el) return;\r\n      const parent = el.parentElement;\r\n      const overlay = viewerRef.current?.querySelector('.enlarge');\r\n      if (!overlay) return;\r\n      const refDiv = parent.querySelector('.item__image--reference');\r\n      const originalPos = originalTilePositionRef.current;\r\n      if (!originalPos) {\r\n        overlay.remove();\r\n        if (refDiv) refDiv.remove();\r\n        parent.style.setProperty('--rot-y-delta', '0deg');\r\n        parent.style.setProperty('--rot-x-delta', '0deg');\r\n        el.style.visibility = '';\r\n        el.style.zIndex = 0;\r\n        focusedElRef.current = null;\r\n        rootRef.current?.removeAttribute('data-enlarging');\r\n        openingRef.current = false;\r\n        unlockScroll();\r\n        return;\r\n      }\r\n      const currentRect = overlay.getBoundingClientRect();\r\n      const rootRect = rootRef.current.getBoundingClientRect();\r\n      const originalPosRelativeToRoot = {\r\n        left: originalPos.left - rootRect.left,\r\n        top: originalPos.top - rootRect.top,\r\n        width: originalPos.width,\r\n        height: originalPos.height\r\n      };\r\n      const overlayRelativeToRoot = {\r\n        left: currentRect.left - rootRect.left,\r\n        top: currentRect.top - rootRect.top,\r\n        width: currentRect.width,\r\n        height: currentRect.height\r\n      };\r\n      const animatingOverlay = document.createElement('div');\r\n      animatingOverlay.className = 'enlarge-closing';\r\n      animatingOverlay.style.cssText = `position:absolute;left:${overlayRelativeToRoot.left}px;top:${overlayRelativeToRoot.top}px;width:${overlayRelativeToRoot.width}px;height:${overlayRelativeToRoot.height}px;z-index:9999;border-radius: var(--enlarge-radius, 32px);overflow:hidden;box-shadow:0 10px 30px rgba(0,0,0,.35);transition:all ${enlargeTransitionMs}ms ease-out;pointer-events:none;margin:0;transform:none;`;\r\n      const originalImg = overlay.querySelector('img');\r\n      if (originalImg) {\r\n        const img = originalImg.cloneNode();\r\n        img.style.cssText = 'width:100%;height:100%;object-fit:cover;';\r\n        animatingOverlay.appendChild(img);\r\n      }\r\n      overlay.remove();\r\n      rootRef.current.appendChild(animatingOverlay);\r\n      void animatingOverlay.getBoundingClientRect();\r\n      requestAnimationFrame(() => {\r\n        animatingOverlay.style.left = originalPosRelativeToRoot.left + 'px';\r\n        animatingOverlay.style.top = originalPosRelativeToRoot.top + 'px';\r\n        animatingOverlay.style.width = originalPosRelativeToRoot.width + 'px';\r\n        animatingOverlay.style.height = originalPosRelativeToRoot.height + 'px';\r\n        animatingOverlay.style.opacity = '0';\r\n      });\r\n      const cleanup = () => {\r\n        animatingOverlay.remove();\r\n        originalTilePositionRef.current = null;\r\n        if (refDiv) refDiv.remove();\r\n        parent.style.transition = 'none';\r\n        el.style.transition = 'none';\r\n        parent.style.setProperty('--rot-y-delta', '0deg');\r\n        parent.style.setProperty('--rot-x-delta', '0deg');\r\n        requestAnimationFrame(() => {\r\n          el.style.visibility = '';\r\n          el.style.opacity = '0';\r\n          el.style.zIndex = 0;\r\n          focusedElRef.current = null;\r\n          rootRef.current?.removeAttribute('data-enlarging');\r\n          requestAnimationFrame(() => {\r\n            parent.style.transition = '';\r\n            el.style.transition = 'opacity 300ms ease-out';\r\n            requestAnimationFrame(() => {\r\n              el.style.opacity = '1';\r\n              setTimeout(() => {\r\n                el.style.transition = '';\r\n                el.style.opacity = '';\r\n                openingRef.current = false;\r\n                if (!draggingRef.current && rootRef.current?.getAttribute('data-enlarging') !== 'true')\r\n                  document.body.classList.remove('dg-scroll-lock');\r\n              }, 300);\r\n            });\r\n          });\r\n        });\r\n      };\r\n      animatingOverlay.addEventListener('transitionend', cleanup, { once: true });\r\n    };\r\n    scrim.addEventListener('click', close);\r\n    const onKey = e => {\r\n      if (e.key === 'Escape') close();\r\n    };\r\n    window.addEventListener('keydown', onKey);\r\n    return () => {\r\n      scrim.removeEventListener('click', close);\r\n      window.removeEventListener('keydown', onKey);\r\n    };\r\n  }, [enlargeTransitionMs, unlockScroll]);\r\n\r\n  const openItemFromElement = useCallback(\r\n    el => {\r\n      if (openingRef.current) return;\r\n      openingRef.current = true;\r\n      openStartedAtRef.current = performance.now();\r\n      lockScroll();\r\n      const parent = el.parentElement;\r\n      focusedElRef.current = el;\r\n      el.setAttribute('data-focused', 'true');\r\n      const offsetX = getDataNumber(parent, 'offsetX', 0);\r\n      const offsetY = getDataNumber(parent, 'offsetY', 0);\r\n      const sizeX = getDataNumber(parent, 'sizeX', 2);\r\n      const sizeY = getDataNumber(parent, 'sizeY', 2);\r\n      const parentRot = computeItemBaseRotation(offsetX, offsetY, sizeX, sizeY, segments);\r\n      const parentY = normalizeAngle(parentRot.rotateY);\r\n      const globalY = normalizeAngle(rotationRef.current.y);\r\n      let rotY = -(parentY + globalY) % 360;\r\n      if (rotY < -180) rotY += 360;\r\n      const rotX = -parentRot.rotateX - rotationRef.current.x;\r\n      parent.style.setProperty('--rot-y-delta', `${rotY}deg`);\r\n      parent.style.setProperty('--rot-x-delta', `${rotX}deg`);\r\n      const refDiv = document.createElement('div');\r\n      refDiv.className = 'item__image item__image--reference';\r\n      refDiv.style.opacity = '0';\r\n      refDiv.style.transform = `rotateX(${-parentRot.rotateX}deg) rotateY(${-parentRot.rotateY}deg)`;\r\n      parent.appendChild(refDiv);\r\n      const tileR = refDiv.getBoundingClientRect();\r\n      const mainR = mainRef.current.getBoundingClientRect();\r\n      const frameR = frameRef.current.getBoundingClientRect();\r\n      originalTilePositionRef.current = { left: tileR.left, top: tileR.top, width: tileR.width, height: tileR.height };\r\n      el.style.visibility = 'hidden';\r\n      el.style.zIndex = 0;\r\n      const overlay = document.createElement('div');\r\n      overlay.className = 'enlarge';\r\n      overlay.style.position = 'absolute';\r\n      overlay.style.left = frameR.left - mainR.left + 'px';\r\n      overlay.style.top = frameR.top - mainR.top + 'px';\r\n      overlay.style.width = frameR.width + 'px';\r\n      overlay.style.height = frameR.height + 'px';\r\n      overlay.style.opacity = '0';\r\n      overlay.style.zIndex = '30';\r\n      overlay.style.willChange = 'transform, opacity';\r\n      overlay.style.transformOrigin = 'top left';\r\n      overlay.style.transition = `transform ${enlargeTransitionMs}ms ease, opacity ${enlargeTransitionMs}ms ease`;\r\n      const rawSrc = parent.dataset.src || el.querySelector('img')?.src || '';\r\n      const img = document.createElement('img');\r\n      img.src = rawSrc;\r\n      overlay.appendChild(img);\r\n      viewerRef.current.appendChild(overlay);\r\n      const tx0 = tileR.left - frameR.left;\r\n      const ty0 = tileR.top - frameR.top;\r\n      const sx0 = tileR.width / frameR.width;\r\n      const sy0 = tileR.height / frameR.height;\r\n      overlay.style.transform = `translate(${tx0}px, ${ty0}px) scale(${sx0}, ${sy0})`;\r\n      requestAnimationFrame(() => {\r\n        overlay.style.opacity = '1';\r\n        overlay.style.transform = 'translate(0px, 0px) scale(1,1)';\r\n        rootRef.current?.setAttribute('data-enlarging', 'true');\r\n      });\r\n      const wantsResize = openedImageWidth || openedImageHeight;\r\n      if (wantsResize) {\r\n        const onFirstEnd = ev => {\r\n          if (ev.propertyName !== 'transform') return;\r\n          overlay.removeEventListener('transitionend', onFirstEnd);\r\n          const prevTransition = overlay.style.transition;\r\n          overlay.style.transition = 'none';\r\n          const tempWidth = openedImageWidth || `${frameR.width}px`;\r\n          const tempHeight = openedImageHeight || `${frameR.height}px`;\r\n          overlay.style.width = tempWidth;\r\n          overlay.style.height = tempHeight;\r\n          const newRect = overlay.getBoundingClientRect();\r\n          overlay.style.width = frameR.width + 'px';\r\n          overlay.style.height = frameR.height + 'px';\r\n          void overlay.offsetWidth;\r\n          overlay.style.transition = `left ${enlargeTransitionMs}ms ease, top ${enlargeTransitionMs}ms ease, width ${enlargeTransitionMs}ms ease, height ${enlargeTransitionMs}ms ease`;\r\n          const centeredLeft = frameR.left - mainR.left + (frameR.width - newRect.width) / 2;\r\n          const centeredTop = frameR.top - mainR.top + (frameR.height - newRect.height) / 2;\r\n          requestAnimationFrame(() => {\r\n            overlay.style.left = `${centeredLeft}px`;\r\n            overlay.style.top = `${centeredTop}px`;\r\n            overlay.style.width = tempWidth;\r\n            overlay.style.height = tempHeight;\r\n          });\r\n          const cleanupSecond = () => {\r\n            overlay.removeEventListener('transitionend', cleanupSecond);\r\n            overlay.style.transition = prevTransition;\r\n          };\r\n          overlay.addEventListener('transitionend', cleanupSecond, { once: true });\r\n        };\r\n        overlay.addEventListener('transitionend', onFirstEnd);\r\n      }\r\n    },\r\n    [enlargeTransitionMs, lockScroll, openedImageHeight, openedImageWidth, segments]\r\n  );\r\n\r\n  const onTileClick = useCallback(\r\n    e => {\r\n      if (draggingRef.current) return;\r\n      if (performance.now() - lastDragEndAt.current < 80) return;\r\n      if (openingRef.current) return;\r\n      openItemFromElement(e.currentTarget);\r\n    },\r\n    [openItemFromElement]\r\n  );\r\n\r\n  const onTilePointerUp = useCallback(\r\n    e => {\r\n      if (e.pointerType !== 'touch') return;\r\n      if (draggingRef.current) return;\r\n      if (performance.now() - lastDragEndAt.current < 80) return;\r\n      if (openingRef.current) return;\r\n      openItemFromElement(e.currentTarget);\r\n    },\r\n    [openItemFromElement]\r\n  );\r\n\r\n  const onTileTouchEnd = useCallback(\r\n    e => {\r\n      if (draggingRef.current) return;\r\n      if (performance.now() - lastDragEndAt.current < 80) return;\r\n      if (openingRef.current) return;\r\n      openItemFromElement(e.currentTarget);\r\n    },\r\n    [openItemFromElement]\r\n  );\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      document.body.classList.remove('dg-scroll-lock');\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div\r\n      ref={rootRef}\r\n      className=\"sphere-root\"\r\n      style={{\r\n        ['--segments-x']: segments,\r\n        ['--segments-y']: segments,\r\n        ['--overlay-blur-color']: overlayBlurColor,\r\n        ['--tile-radius']: imageBorderRadius,\r\n        ['--enlarge-radius']: openedImageBorderRadius,\r\n        ['--image-filter']: grayscale ? 'grayscale(1)' : 'none'\r\n      }}\r\n    >\r\n      <main ref={mainRef} className=\"sphere-main\">\r\n        <div className=\"stage\">\r\n          <div ref={sphereRef} className=\"sphere\">\r\n            {items.map((it, i) => (\r\n              <div\r\n                key={`${it.x},${it.y},${i}`}\r\n                className=\"item\"\r\n                data-src={it.src}\r\n                data-offset-x={it.x}\r\n                data-offset-y={it.y}\r\n                data-size-x={it.sizeX}\r\n                data-size-y={it.sizeY}\r\n                style={{\r\n                  ['--offset-x']: it.x,\r\n                  ['--offset-y']: it.y,\r\n                  ['--item-size-x']: it.sizeX,\r\n                  ['--item-size-y']: it.sizeY\r\n                }}\r\n              >\r\n                <div\r\n                  className=\"item__image\"\r\n                  role=\"button\"\r\n                  tabIndex={0}\r\n                  aria-label={it.alt || 'Open image'}\r\n                  onClick={onTileClick}\r\n                  onPointerUp={onTilePointerUp}\r\n                  onTouchEnd={onTileTouchEnd}\r\n                >\r\n                  <img src={it.src} draggable={false} alt={it.alt} />\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"overlay\" />\r\n        <div className=\"overlay overlay--blur\" />\r\n        <div className=\"edge-fade edge-fade--top\" />\r\n        <div className=\"edge-fade edge-fade--bottom\" />\r\n\r\n        <div className=\"viewer\" ref={viewerRef}>\r\n          <div ref={scrimRef} className=\"scrim\" />\r\n          <div ref={frameRef} className=\"frame\" />\r\n        </div>\r\n      </main>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}